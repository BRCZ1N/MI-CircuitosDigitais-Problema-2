// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "09/24/2023 04:21:07"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module modulo_contador_sync_2_bits (
	clr,
	clk,
	q);
input 	clr;
input 	clk;
output 	[1:0] q;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \clr~combout ;
wire \ff_1|q~regout ;
wire \ff_2|q~regout ;


// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_84,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clr~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clr~combout ),
	.padio(clr));
// synopsys translate_off
defparam \clr~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X6_Y4_N3
maxii_lcell \ff_1|q (
// Equation(s):
// \ff_1|q~regout  = DFFEAS((((!\clr~combout  & !\ff_1|q~regout ))), !GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(!\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\clr~combout ),
	.datad(\ff_1|q~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ff_1|q~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ff_1|q .lut_mask = "000f";
defparam \ff_1|q .operation_mode = "normal";
defparam \ff_1|q .output_mode = "reg_only";
defparam \ff_1|q .register_cascade_mode = "off";
defparam \ff_1|q .sum_lutc_input = "datac";
defparam \ff_1|q .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N7
maxii_lcell \ff_2|q (
// Equation(s):
// \ff_2|q~regout  = DFFEAS((!\clr~combout  & ((\ff_2|q~regout  $ (\ff_1|q~regout )))), !GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(!\clk~combout ),
	.dataa(\clr~combout ),
	.datab(vcc),
	.datac(\ff_2|q~regout ),
	.datad(\ff_1|q~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ff_2|q~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ff_2|q .lut_mask = "0550";
defparam \ff_2|q .operation_mode = "normal";
defparam \ff_2|q .output_mode = "reg_only";
defparam \ff_2|q .register_cascade_mode = "off";
defparam \ff_2|q .sum_lutc_input = "datac";
defparam \ff_2|q .synch_mode = "off";
// synopsys translate_on

// Location: PIN_82,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \q[0]~I (
	.datain(\ff_1|q~regout ),
	.oe(vcc),
	.combout(),
	.padio(q[0]));
// synopsys translate_off
defparam \q[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_83,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \q[1]~I (
	.datain(\ff_2|q~regout ),
	.oe(vcc),
	.combout(),
	.padio(q[1]));
// synopsys translate_off
defparam \q[1]~I .operation_mode = "output";
// synopsys translate_on

endmodule
